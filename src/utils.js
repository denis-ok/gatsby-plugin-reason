/**
 * Names of different functions that can be used to create a component in ReasonReact
 * Used to parse the name from page components to create the URL path
 */
export const COMPONENT_FUNCS = [
    'statelessComponent',
    'statelessComponentWithRetainedProps',
    'reducerComponent',
    'reducerComponentWithRetainedProps',
]

// TODO can we parse the AST generated by refmt to more reliably get the component name?

/**
 * Find the line that contains the component definition
 */

export const getLineWithComponentName = fileSource =>
    fileSource
        .split('\n')
        .filter(Boolean)
        .find(l => l.indexOf('let component') !== -1)

export const extractNameFromLine = componentDef =>
    COMPONENT_FUNCS.map(func => new RegExp(`${func}\\("(.*?)"\\)`))
        .map(regex => regex.exec(componentDef))
        .filter(Boolean)
        .map(regexMatch => regexMatch[1])[0]

/**
 * Given the source for a page component's file, parse the contents of the file
 * in order to determine the URL path for the page. This will use the name
 * of the ReasonReact component defined in the file.
 *
 * e.g. if the source contains
 * ```ocaml
 * let component = ReasonReact.statelessComponent("MyComponent");
 * ```
 * this will return `'MyComponent'`
 */
export const getPathForComponent = source => {
    const line = getLineWithComponentName(source)
    if (!line) {
        return
    }

    const name = extractNameFromLine(line)
    return name === 'index' ? '/' : `/${name}/`
}
